<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name=".github">
        <df name="ISSUE_TEMPLATE">
        </df>
      </df>
      <df name=".kdev4">
      </df>
      <df name=".tx">
      </df>
      <df name="autom4te.cache">
      </df>
      <df name="bitcoin">
      </df>
      <df name="build-aux">
        <df name="m4">
        </df>
      </df>
      <df name="build_msvc">
        <df name="bench_bitcoin">
        </df>
        <df name="bitcoin-cli">
        </df>
        <df name="bitcoin-qt">
        </df>
        <df name="bitcoin-tx">
        </df>
        <df name="bitcoin-util">
        </df>
        <df name="bitcoin-wallet">
        </df>
        <df name="bitcoind">
        </df>
        <df name="libbitcoin_cli">
        </df>
        <df name="libbitcoin_common">
        </df>
        <df name="libbitcoin_crypto">
        </df>
        <df name="libbitcoin_node">
        </df>
        <df name="libbitcoin_qt">
        </df>
        <df name="libbitcoin_util">
        </df>
        <df name="libbitcoin_wallet">
        </df>
        <df name="libbitcoin_wallet_tool">
        </df>
        <df name="libbitcoin_zmq">
        </df>
        <df name="libbitcoinconsensus">
        </df>
        <df name="libleveldb">
        </df>
        <df name="libminisketch">
        </df>
        <df name="libsecp256k1">
        </df>
        <df name="libtest_util">
        </df>
        <df name="libunivalue">
        </df>
        <df name="msbuild">
          <df name="tasks">
          </df>
        </df>
        <df name="test_bitcoin">
        </df>
        <df name="test_bitcoin-qt">
        </df>
        <in>libsecp256k1_config.h</in>
      </df>
      <df name="ci">
        <df name="lint">
        </df>
        <df name="retry">
        </df>
        <df name="test">
        </df>
      </df>
      <df name="contrib">
        <df name="completions">
          <df name="bash">
          </df>
          <df name="fish">
          </df>
        </df>
        <df name="debian">
        </df>
        <df name="devtools">
          <df name="iwyu">
          </df>
        </df>
        <df name="guix">
          <df name="libexec">
          </df>
          <df name="patches">
          </df>
        </df>
        <df name="init">
        </df>
        <df name="linearize">
        </df>
        <df name="macdeploy">
        </df>
        <df name="message-capture">
        </df>
        <df name="qos">
        </df>
        <df name="seeds">
        </df>
        <df name="shell">
        </df>
        <df name="signet">
        </df>
        <df name="testgen">
        </df>
        <df name="tracing">
        </df>
        <df name="verify-commits">
        </df>
        <df name="verifybinaries">
        </df>
        <df name="windeploy">
        </df>
        <df name="zmq">
        </df>
      </df>
      <df name="depends">
        <df name="builders">
        </df>
        <df name="hosts">
        </df>
        <df name="packages">
        </df>
        <df name="patches">
          <df name="bdb">
          </df>
          <df name="fontconfig">
          </df>
          <df name="libxcb">
          </df>
          <df name="miniupnpc">
          </df>
          <df name="qt">
          </df>
          <df name="systemtap">
          </df>
          <df name="zeromq">
          </df>
        </df>
      </df>
      <df name="doc">
        <df name="design">
        </df>
        <df name="man">
        </df>
        <df name="policy">
        </df>
        <df name="release-notes">
        </df>
      </df>
      <df name="labs">
        <in>comandos-bitcoin.marcosptf</in>
        <in>man-bench-bitcoin.marcosptf</in>
        <in>man-bitcoin-cli.marcosptf</in>
        <in>man-bitcoin-qt.marcosptf</in>
        <in>man-bitcoin-tx.marcosptf</in>
        <in>man-bitcoin-util.marcosptf</in>
        <in>man-bitcoin-wallet.marcosptf</in>
        <in>man-bitcoind.marcosptf</in>
        <in>man-docker-compose.marcosptf</in>
      </df>
      <df name="share">
        <df name="examples">
        </df>
        <df name="pixmaps">
        </df>
        <df name="qt">
        </df>
        <df name="rpcauth">
        </df>
      </df>
      <df name="src">
        <df name=".deps">
        </df>
        <df name=".libs">
        </df>
        <df name="bench">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <df name="data">
            <in>block413567.raw.h</in>
          </df>
          <in>addrman.cpp</in>
          <in>base58.cpp</in>
          <in>bech32.cpp</in>
          <in>bench.cpp</in>
          <in>bench.h</in>
          <in>bench_bitcoin.cpp</in>
          <in>block_assemble.cpp</in>
          <in>ccoins_caching.cpp</in>
          <in>chacha20.cpp</in>
          <in>chacha_poly_aead.cpp</in>
          <in>checkblock.cpp</in>
          <in>checkqueue.cpp</in>
          <in>coin_selection.cpp</in>
          <in>crypto_hash.cpp</in>
          <in>data.cpp</in>
          <in>data.h</in>
          <in>descriptors.cpp</in>
          <in>duplicate_inputs.cpp</in>
          <in>examples.cpp</in>
          <in>gcs_filter.cpp</in>
          <in>hashpadding.cpp</in>
          <in>load_external.cpp</in>
          <in>lockedpool.cpp</in>
          <in>logging.cpp</in>
          <in>mempool_eviction.cpp</in>
          <in>mempool_stress.cpp</in>
          <in>merkle_root.cpp</in>
          <in>nanobench.cpp</in>
          <in>nanobench.h</in>
          <in>peer_eviction.cpp</in>
          <in>poly1305.cpp</in>
          <in>prevector.cpp</in>
          <in>rollingbloom.cpp</in>
          <in>rpc_blockchain.cpp</in>
          <in>rpc_mempool.cpp</in>
          <in>strencodings.cpp</in>
          <in>util_time.cpp</in>
          <in>verify_script.cpp</in>
          <in>wallet_balance.cpp</in>
          <in>wallet_create_tx.cpp</in>
          <in>wallet_loading.cpp</in>
        </df>
        <df name="common">
          <df name=".deps">
          </df>
          <in>bloom.cpp</in>
          <in>bloom.h</in>
          <in>init.cpp</in>
          <in>init.h</in>
          <in>interfaces.cpp</in>
          <in>run_command.cpp</in>
          <in>run_command.h</in>
          <in>url.cpp</in>
          <in>url.h</in>
        </df>
        <df name="compat">
          <df name=".deps">
          </df>
          <in>assumptions.h</in>
          <in>byteswap.h</in>
          <in>compat.h</in>
          <in>cpuid.h</in>
          <in>endian.h</in>
          <in>stdin.cpp</in>
          <in>stdin.h</in>
        </df>
        <df name="config">
          <in>bitcoin-config.h</in>
        </df>
        <df name="consensus">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <in>amount.h</in>
          <in>consensus.h</in>
          <in>merkle.cpp</in>
          <in>merkle.h</in>
          <in>params.h</in>
          <in>tx_check.cpp</in>
          <in>tx_check.h</in>
          <in>tx_verify.cpp</in>
          <in>tx_verify.h</in>
          <in>validation.h</in>
        </df>
        <df name="crc32c">
          <df name=".libs">
          </df>
          <df name="include">
            <df name="crc32c">
              <in>crc32c.h</in>
            </df>
          </df>
          <df name="src">
            <df name=".deps">
            </df>
            <in>crc32c.cc</in>
            <in>crc32c_arm64.cc</in>
            <in>crc32c_arm64.h</in>
            <in>crc32c_arm64_check.h</in>
            <in>crc32c_arm64_unittest.cc</in>
            <in>crc32c_benchmark.cc</in>
            <in>crc32c_capi_unittest.c</in>
            <in>crc32c_extend_unittests.h</in>
            <in>crc32c_internal.h</in>
            <in>crc32c_portable.cc</in>
            <in>crc32c_portable_unittest.cc</in>
            <in>crc32c_prefetch.h</in>
            <in>crc32c_prefetch_unittest.cc</in>
            <in>crc32c_read_le.h</in>
            <in>crc32c_read_le_unittest.cc</in>
            <in>crc32c_round_up.h</in>
            <in>crc32c_round_up_unittest.cc</in>
            <in>crc32c_sse42.cc</in>
            <in>crc32c_sse42.h</in>
            <in>crc32c_sse42_check.h</in>
            <in>crc32c_sse42_unittest.cc</in>
            <in>crc32c_test_main.cc</in>
            <in>crc32c_unittest.cc</in>
          </df>
        </df>
        <df name="crypto">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <df name="ctaes">
            <in>bench.c</in>
            <in>ctaes.c</in>
            <in>ctaes.h</in>
            <in>test.c</in>
          </df>
          <in>aes.cpp</in>
          <in>aes.h</in>
          <in>chacha20.cpp</in>
          <in>chacha20.h</in>
          <in>chacha_poly_aead.cpp</in>
          <in>chacha_poly_aead.h</in>
          <in>common.h</in>
          <in>hkdf_sha256_32.cpp</in>
          <in>hkdf_sha256_32.h</in>
          <in>hmac_sha256.cpp</in>
          <in>hmac_sha256.h</in>
          <in>hmac_sha512.cpp</in>
          <in>hmac_sha512.h</in>
          <in>muhash.cpp</in>
          <in>muhash.h</in>
          <in>poly1305.cpp</in>
          <in>poly1305.h</in>
          <in>ripemd160.cpp</in>
          <in>ripemd160.h</in>
          <in>sha1.cpp</in>
          <in>sha1.h</in>
          <in>sha256.cpp</in>
          <in>sha256.h</in>
          <in>sha256_arm_shani.cpp</in>
          <in>sha256_avx2.cpp</in>
          <in>sha256_sse4.cpp</in>
          <in>sha256_sse41.cpp</in>
          <in>sha256_x86_shani.cpp</in>
          <in>sha3.cpp</in>
          <in>sha3.h</in>
          <in>sha512.cpp</in>
          <in>sha512.h</in>
          <in>siphash.cpp</in>
          <in>siphash.h</in>
        </df>
        <df name="index">
          <df name=".deps">
          </df>
          <in>base.cpp</in>
          <in>base.h</in>
          <in>blockfilterindex.cpp</in>
          <in>blockfilterindex.h</in>
          <in>coinstatsindex.cpp</in>
          <in>coinstatsindex.h</in>
          <in>disktxpos.h</in>
          <in>txindex.cpp</in>
          <in>txindex.h</in>
        </df>
        <df name="init">
          <df name=".deps">
          </df>
          <in>bitcoin-gui.cpp</in>
          <in>bitcoin-node.cpp</in>
          <in>bitcoin-qt.cpp</in>
          <in>bitcoin-wallet.cpp</in>
          <in>bitcoind.cpp</in>
          <in>common.cpp</in>
          <in>common.h</in>
        </df>
        <df name="interfaces">
          <in>chain.h</in>
          <in>echo.h</in>
          <in>handler.h</in>
          <in>init.h</in>
          <in>ipc.h</in>
          <in>node.h</in>
          <in>wallet.h</in>
        </df>
        <df name="ipc">
          <df name=".deps">
          </df>
          <df name="capnp">
            <df name=".deps">
            </df>
            <in>context.h</in>
            <in>init-types.h</in>
            <in>protocol.cpp</in>
            <in>protocol.h</in>
          </df>
          <in>context.h</in>
          <in>exception.h</in>
          <in>interfaces.cpp</in>
          <in>process.cpp</in>
          <in>process.h</in>
          <in>protocol.h</in>
        </df>
        <df name="kernel">
          <df name=".deps">
          </df>
          <in>bitcoinkernel.cpp</in>
          <in>blockmanager_opts.h</in>
          <in>chain.cpp</in>
          <in>chain.h</in>
          <in>chainparams.cpp</in>
          <in>chainparams.h</in>
          <in>chainstatemanager_opts.h</in>
          <in>checks.cpp</in>
          <in>checks.h</in>
          <in>coinstats.cpp</in>
          <in>coinstats.h</in>
          <in>context.cpp</in>
          <in>context.h</in>
          <in>cs_main.cpp</in>
          <in>cs_main.h</in>
          <in>mempool_entry.h</in>
          <in>mempool_limits.h</in>
          <in>mempool_options.h</in>
          <in>mempool_persist.cpp</in>
          <in>mempool_persist.h</in>
          <in>validation_cache_sizes.h</in>
        </df>
        <df name="leveldb">
          <df name=".libs">
          </df>
          <df name="benchmarks">
            <in>db_bench.cc</in>
            <in>db_bench_sqlite3.cc</in>
            <in>db_bench_tree_db.cc</in>
          </df>
          <df name="cmake">
          </df>
          <df name="db">
            <df name=".deps">
            </df>
            <in>autocompact_test.cc</in>
            <in>builder.cc</in>
            <in>builder.h</in>
            <in>c.cc</in>
            <in>c_test.c</in>
            <in>corruption_test.cc</in>
            <in>db_impl.cc</in>
            <in>db_impl.h</in>
            <in>db_iter.cc</in>
            <in>db_iter.h</in>
            <in>db_test.cc</in>
            <in>dbformat.cc</in>
            <in>dbformat.h</in>
            <in>dbformat_test.cc</in>
            <in>dumpfile.cc</in>
            <in>fault_injection_test.cc</in>
            <in>filename.cc</in>
            <in>filename.h</in>
            <in>filename_test.cc</in>
            <in>leveldbutil.cc</in>
            <in>log_format.h</in>
            <in>log_reader.cc</in>
            <in>log_reader.h</in>
            <in>log_test.cc</in>
            <in>log_writer.cc</in>
            <in>log_writer.h</in>
            <in>memtable.cc</in>
            <in>memtable.h</in>
            <in>recovery_test.cc</in>
            <in>repair.cc</in>
            <in>skiplist.h</in>
            <in>skiplist_test.cc</in>
            <in>snapshot.h</in>
            <in>table_cache.cc</in>
            <in>table_cache.h</in>
            <in>version_edit.cc</in>
            <in>version_edit.h</in>
            <in>version_edit_test.cc</in>
            <in>version_set.cc</in>
            <in>version_set.h</in>
            <in>version_set_test.cc</in>
            <in>write_batch.cc</in>
            <in>write_batch_internal.h</in>
            <in>write_batch_test.cc</in>
          </df>
          <df name="doc">
          </df>
          <df name="helpers">
            <df name="memenv">
              <df name=".deps">
              </df>
              <in>memenv.cc</in>
              <in>memenv.h</in>
              <in>memenv_test.cc</in>
            </df>
          </df>
          <df name="include">
            <df name="leveldb">
              <in>c.h</in>
              <in>cache.h</in>
              <in>comparator.h</in>
              <in>db.h</in>
              <in>dumpfile.h</in>
              <in>env.h</in>
              <in>export.h</in>
              <in>filter_policy.h</in>
              <in>iterator.h</in>
              <in>options.h</in>
              <in>slice.h</in>
              <in>status.h</in>
              <in>table.h</in>
              <in>table_builder.h</in>
              <in>write_batch.h</in>
            </df>
          </df>
          <df name="issues">
            <in>issue178_test.cc</in>
            <in>issue200_test.cc</in>
            <in>issue320_test.cc</in>
          </df>
          <df name="port">
            <in>port.h</in>
            <in>port_example.h</in>
            <in>port_stdcxx.h</in>
            <in>thread_annotations.h</in>
          </df>
          <df name="table">
            <df name=".deps">
            </df>
            <in>block.cc</in>
            <in>block.h</in>
            <in>block_builder.cc</in>
            <in>block_builder.h</in>
            <in>filter_block.cc</in>
            <in>filter_block.h</in>
            <in>filter_block_test.cc</in>
            <in>format.cc</in>
            <in>format.h</in>
            <in>iterator.cc</in>
            <in>iterator_wrapper.h</in>
            <in>merger.cc</in>
            <in>merger.h</in>
            <in>table.cc</in>
            <in>table_builder.cc</in>
            <in>table_test.cc</in>
            <in>two_level_iterator.cc</in>
            <in>two_level_iterator.h</in>
          </df>
          <df name="util">
            <df name=".deps">
            </df>
            <in>arena.cc</in>
            <in>arena.h</in>
            <in>arena_test.cc</in>
            <in>bloom.cc</in>
            <in>bloom_test.cc</in>
            <in>cache.cc</in>
            <in>cache_test.cc</in>
            <in>coding.cc</in>
            <in>coding.h</in>
            <in>coding_test.cc</in>
            <in>comparator.cc</in>
            <in>crc32c.cc</in>
            <in>crc32c.h</in>
            <in>crc32c_test.cc</in>
            <in>env.cc</in>
            <in>env_posix.cc</in>
            <in>env_posix_test.cc</in>
            <in>env_posix_test_helper.h</in>
            <in>env_test.cc</in>
            <in>env_windows.cc</in>
            <in>env_windows_test.cc</in>
            <in>env_windows_test_helper.h</in>
            <in>filter_policy.cc</in>
            <in>hash.cc</in>
            <in>hash.h</in>
            <in>hash_test.cc</in>
            <in>histogram.cc</in>
            <in>histogram.h</in>
            <in>logging.cc</in>
            <in>logging.h</in>
            <in>logging_test.cc</in>
            <in>mutexlock.h</in>
            <in>no_destructor.h</in>
            <in>no_destructor_test.cc</in>
            <in>options.cc</in>
            <in>posix_logger.h</in>
            <in>random.h</in>
            <in>status.cc</in>
            <in>status_test.cc</in>
            <in>testharness.cc</in>
            <in>testharness.h</in>
            <in>testutil.cc</in>
            <in>testutil.h</in>
            <in>windows_logger.h</in>
          </df>
        </df>
        <df name="logging">
          <in>timer.h</in>
        </df>
        <df name="minisketch">
          <df name="build-aux">
            <df name="m4">
            </df>
          </df>
          <df name="ci">
          </df>
          <df name="doc">
            <in>example.c</in>
          </df>
          <df name="include">
            <in>minisketch.h</in>
          </df>
          <df name="src">
            <df name=".deps">
            </df>
            <df name="fields">
              <df name=".deps">
              </df>
              <in>clmul_1byte.cpp</in>
              <in>clmul_2bytes.cpp</in>
              <in>clmul_3bytes.cpp</in>
              <in>clmul_4bytes.cpp</in>
              <in>clmul_5bytes.cpp</in>
              <in>clmul_6bytes.cpp</in>
              <in>clmul_7bytes.cpp</in>
              <in>clmul_8bytes.cpp</in>
              <in>clmul_common_impl.h</in>
              <in>generic_1byte.cpp</in>
              <in>generic_2bytes.cpp</in>
              <in>generic_3bytes.cpp</in>
              <in>generic_4bytes.cpp</in>
              <in>generic_5bytes.cpp</in>
              <in>generic_6bytes.cpp</in>
              <in>generic_7bytes.cpp</in>
              <in>generic_8bytes.cpp</in>
              <in>generic_common_impl.h</in>
            </df>
            <in>bench.cpp</in>
            <in>false_positives.h</in>
            <in>fielddefines.h</in>
            <in>int_utils.h</in>
            <in>lintrans.h</in>
            <in>minisketch.cpp</in>
            <in>sketch.h</in>
            <in>sketch_impl.h</in>
            <in>test.cpp</in>
            <in>util.h</in>
          </df>
          <df name="tests">
          </df>
        </df>
        <df name="node">
          <df name=".deps">
          </df>
          <in>blockmanager_args.cpp</in>
          <in>blockmanager_args.h</in>
          <in>blockstorage.cpp</in>
          <in>blockstorage.h</in>
          <in>caches.cpp</in>
          <in>caches.h</in>
          <in>chainstate.cpp</in>
          <in>chainstate.h</in>
          <in>chainstatemanager_args.cpp</in>
          <in>chainstatemanager_args.h</in>
          <in>coin.cpp</in>
          <in>coin.h</in>
          <in>coins_view_args.cpp</in>
          <in>coins_view_args.h</in>
          <in>connection_types.cpp</in>
          <in>connection_types.h</in>
          <in>context.cpp</in>
          <in>context.h</in>
          <in>database_args.cpp</in>
          <in>database_args.h</in>
          <in>eviction.cpp</in>
          <in>eviction.h</in>
          <in>interface_ui.cpp</in>
          <in>interface_ui.h</in>
          <in>interfaces.cpp</in>
          <in>mempool_args.cpp</in>
          <in>mempool_args.h</in>
          <in>mempool_persist_args.cpp</in>
          <in>mempool_persist_args.h</in>
          <in>miner.cpp</in>
          <in>miner.h</in>
          <in>minisketchwrapper.cpp</in>
          <in>minisketchwrapper.h</in>
          <in>psbt.cpp</in>
          <in>psbt.h</in>
          <in>transaction.cpp</in>
          <in>transaction.h</in>
          <in>txreconciliation.cpp</in>
          <in>txreconciliation.h</in>
          <in>utxo_snapshot.cpp</in>
          <in>utxo_snapshot.h</in>
          <in>validation_cache_args.cpp</in>
          <in>validation_cache_args.h</in>
        </df>
        <df name="obj">
          <in>build.h</in>
        </df>
        <df name="policy">
          <df name=".deps">
          </df>
          <in>feerate.cpp</in>
          <in>feerate.h</in>
          <in>fees.cpp</in>
          <in>fees.h</in>
          <in>fees_args.cpp</in>
          <in>fees_args.h</in>
          <in>packages.cpp</in>
          <in>packages.h</in>
          <in>policy.cpp</in>
          <in>policy.h</in>
          <in>rbf.cpp</in>
          <in>rbf.h</in>
          <in>settings.cpp</in>
          <in>settings.h</in>
        </df>
        <df name="primitives">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <in>block.cpp</in>
          <in>block.h</in>
          <in>transaction.cpp</in>
          <in>transaction.h</in>
        </df>
        <df name="qt">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <df name="android">
            <df name="res">
              <df name="drawable-hdpi">
              </df>
              <df name="drawable-ldpi">
              </df>
              <df name="drawable-mdpi">
              </df>
              <df name="drawable-xhdpi">
              </df>
              <df name="drawable-xxhdpi">
              </df>
              <df name="drawable-xxxhdpi">
              </df>
              <df name="values">
              </df>
            </df>
            <df name="src">
              <df name="org">
                <df name="bitcoincore">
                  <df name="qt">
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="forms">
            <in>ui_addressbookpage.h</in>
            <in>ui_askpassphrasedialog.h</in>
            <in>ui_coincontroldialog.h</in>
            <in>ui_createwalletdialog.h</in>
            <in>ui_debugwindow.h</in>
            <in>ui_editaddressdialog.h</in>
            <in>ui_helpmessagedialog.h</in>
            <in>ui_intro.h</in>
            <in>ui_modaloverlay.h</in>
            <in>ui_openuridialog.h</in>
            <in>ui_optionsdialog.h</in>
            <in>ui_overviewpage.h</in>
            <in>ui_psbtoperationsdialog.h</in>
            <in>ui_receivecoinsdialog.h</in>
            <in>ui_receiverequestdialog.h</in>
            <in>ui_sendcoinsdialog.h</in>
            <in>ui_sendcoinsentry.h</in>
            <in>ui_signverifymessagedialog.h</in>
            <in>ui_transactiondescdialog.h</in>
          </df>
          <df name="locale">
          </df>
          <df name="res">
            <df name="animation">
            </df>
            <df name="fonts">
            </df>
            <df name="icons">
            </df>
            <df name="src">
            </df>
          </df>
          <df name="test">
            <df name=".deps">
            </df>
            <df name=".libs">
            </df>
            <in>addressbooktests.cpp</in>
            <in>addressbooktests.h</in>
            <in>apptests.cpp</in>
            <in>apptests.h</in>
            <in>moc_addressbooktests.cpp</in>
            <in>moc_apptests.cpp</in>
            <in>moc_optiontests.cpp</in>
            <in>moc_rpcnestedtests.cpp</in>
            <in>moc_uritests.cpp</in>
            <in>moc_wallettests.cpp</in>
            <in>optiontests.cpp</in>
            <in>optiontests.h</in>
            <in>rpcnestedtests.cpp</in>
            <in>rpcnestedtests.h</in>
            <in>test_main.cpp</in>
            <in>uritests.cpp</in>
            <in>uritests.h</in>
            <in>util.cpp</in>
            <in>util.h</in>
            <in>wallettests.cpp</in>
            <in>wallettests.h</in>
          </df>
          <in>addressbookpage.cpp</in>
          <in>addressbookpage.h</in>
          <in>addresstablemodel.cpp</in>
          <in>addresstablemodel.h</in>
          <in>askpassphrasedialog.cpp</in>
          <in>askpassphrasedialog.h</in>
          <in>bantablemodel.cpp</in>
          <in>bantablemodel.h</in>
          <in>bitcoin.cpp</in>
          <in>bitcoin.h</in>
          <in>bitcoinaddressvalidator.cpp</in>
          <in>bitcoinaddressvalidator.h</in>
          <in>bitcoinamountfield.cpp</in>
          <in>bitcoinamountfield.h</in>
          <in>bitcoingui.cpp</in>
          <in>bitcoingui.h</in>
          <in>bitcoinstrings.cpp</in>
          <in>bitcoinunits.cpp</in>
          <in>bitcoinunits.h</in>
          <in>clientmodel.cpp</in>
          <in>clientmodel.h</in>
          <in>coincontroldialog.cpp</in>
          <in>coincontroldialog.h</in>
          <in>coincontroltreewidget.cpp</in>
          <in>coincontroltreewidget.h</in>
          <in>createwalletdialog.cpp</in>
          <in>createwalletdialog.h</in>
          <in>csvmodelwriter.cpp</in>
          <in>csvmodelwriter.h</in>
          <in>editaddressdialog.cpp</in>
          <in>editaddressdialog.h</in>
          <in>guiconstants.h</in>
          <in>guiutil.cpp</in>
          <in>guiutil.h</in>
          <in>initexecutor.cpp</in>
          <in>initexecutor.h</in>
          <in>intro.cpp</in>
          <in>intro.h</in>
          <in>macdockiconhandler.h</in>
          <in>macdockiconhandler.mm</in>
          <in>macnotificationhandler.h</in>
          <in>macnotificationhandler.mm</in>
          <in>macos_appnap.h</in>
          <in>macos_appnap.mm</in>
          <in>main.cpp</in>
          <in>moc_addressbookpage.cpp</in>
          <in>moc_addresstablemodel.cpp</in>
          <in>moc_askpassphrasedialog.cpp</in>
          <in>moc_bantablemodel.cpp</in>
          <in>moc_bitcoin.cpp</in>
          <in>moc_bitcoinaddressvalidator.cpp</in>
          <in>moc_bitcoinamountfield.cpp</in>
          <in>moc_bitcoingui.cpp</in>
          <in>moc_bitcoinunits.cpp</in>
          <in>moc_clientmodel.cpp</in>
          <in>moc_coincontroldialog.cpp</in>
          <in>moc_coincontroltreewidget.cpp</in>
          <in>moc_createwalletdialog.cpp</in>
          <in>moc_csvmodelwriter.cpp</in>
          <in>moc_editaddressdialog.cpp</in>
          <in>moc_guiutil.cpp</in>
          <in>moc_initexecutor.cpp</in>
          <in>moc_intro.cpp</in>
          <in>moc_macdockiconhandler.cpp</in>
          <in>moc_macnotificationhandler.cpp</in>
          <in>moc_modaloverlay.cpp</in>
          <in>moc_notificator.cpp</in>
          <in>moc_openuridialog.cpp</in>
          <in>moc_optionsdialog.cpp</in>
          <in>moc_optionsmodel.cpp</in>
          <in>moc_overviewpage.cpp</in>
          <in>moc_paymentserver.cpp</in>
          <in>moc_peertablemodel.cpp</in>
          <in>moc_peertablesortproxy.cpp</in>
          <in>moc_psbtoperationsdialog.cpp</in>
          <in>moc_qrimagewidget.cpp</in>
          <in>moc_qvalidatedlineedit.cpp</in>
          <in>moc_qvaluecombobox.cpp</in>
          <in>moc_receivecoinsdialog.cpp</in>
          <in>moc_receiverequestdialog.cpp</in>
          <in>moc_recentrequeststablemodel.cpp</in>
          <in>moc_rpcconsole.cpp</in>
          <in>moc_sendcoinsdialog.cpp</in>
          <in>moc_sendcoinsentry.cpp</in>
          <in>moc_signverifymessagedialog.cpp</in>
          <in>moc_splashscreen.cpp</in>
          <in>moc_trafficgraphwidget.cpp</in>
          <in>moc_transactiondesc.cpp</in>
          <in>moc_transactiondescdialog.cpp</in>
          <in>moc_transactionfilterproxy.cpp</in>
          <in>moc_transactionoverviewwidget.cpp</in>
          <in>moc_transactiontablemodel.cpp</in>
          <in>moc_transactionview.cpp</in>
          <in>moc_utilitydialog.cpp</in>
          <in>moc_walletcontroller.cpp</in>
          <in>moc_walletframe.cpp</in>
          <in>moc_walletmodel.cpp</in>
          <in>moc_walletview.cpp</in>
          <in>modaloverlay.cpp</in>
          <in>modaloverlay.h</in>
          <in>networkstyle.cpp</in>
          <in>networkstyle.h</in>
          <in>notificator.cpp</in>
          <in>notificator.h</in>
          <in>openuridialog.cpp</in>
          <in>openuridialog.h</in>
          <in>optionsdialog.cpp</in>
          <in>optionsdialog.h</in>
          <in>optionsmodel.cpp</in>
          <in>optionsmodel.h</in>
          <in>overviewpage.cpp</in>
          <in>overviewpage.h</in>
          <in>paymentserver.cpp</in>
          <in>paymentserver.h</in>
          <in>peertablemodel.cpp</in>
          <in>peertablemodel.h</in>
          <in>peertablesortproxy.cpp</in>
          <in>peertablesortproxy.h</in>
          <in>platformstyle.cpp</in>
          <in>platformstyle.h</in>
          <in>psbtoperationsdialog.cpp</in>
          <in>psbtoperationsdialog.h</in>
          <in>qrc_bitcoin.cpp</in>
          <in>qrc_bitcoin_locale.cpp</in>
          <in>qrimagewidget.cpp</in>
          <in>qrimagewidget.h</in>
          <in>qvalidatedlineedit.cpp</in>
          <in>qvalidatedlineedit.h</in>
          <in>qvaluecombobox.cpp</in>
          <in>qvaluecombobox.h</in>
          <in>receivecoinsdialog.cpp</in>
          <in>receivecoinsdialog.h</in>
          <in>receiverequestdialog.cpp</in>
          <in>receiverequestdialog.h</in>
          <in>recentrequeststablemodel.cpp</in>
          <in>recentrequeststablemodel.h</in>
          <in>rpcconsole.cpp</in>
          <in>rpcconsole.h</in>
          <in>sendcoinsdialog.cpp</in>
          <in>sendcoinsdialog.h</in>
          <in>sendcoinsentry.cpp</in>
          <in>sendcoinsentry.h</in>
          <in>sendcoinsrecipient.h</in>
          <in>signverifymessagedialog.cpp</in>
          <in>signverifymessagedialog.h</in>
          <in>splashscreen.cpp</in>
          <in>splashscreen.h</in>
          <in>trafficgraphwidget.cpp</in>
          <in>trafficgraphwidget.h</in>
          <in>transactiondesc.cpp</in>
          <in>transactiondesc.h</in>
          <in>transactiondescdialog.cpp</in>
          <in>transactiondescdialog.h</in>
          <in>transactionfilterproxy.cpp</in>
          <in>transactionfilterproxy.h</in>
          <in>transactionoverviewwidget.cpp</in>
          <in>transactionoverviewwidget.h</in>
          <in>transactionrecord.cpp</in>
          <in>transactionrecord.h</in>
          <in>transactiontablemodel.cpp</in>
          <in>transactiontablemodel.h</in>
          <in>transactionview.cpp</in>
          <in>transactionview.h</in>
          <in>utilitydialog.cpp</in>
          <in>utilitydialog.h</in>
          <in>walletcontroller.cpp</in>
          <in>walletcontroller.h</in>
          <in>walletframe.cpp</in>
          <in>walletframe.h</in>
          <in>walletmodel.cpp</in>
          <in>walletmodel.h</in>
          <in>walletmodeltransaction.cpp</in>
          <in>walletmodeltransaction.h</in>
          <in>walletview.cpp</in>
          <in>walletview.h</in>
          <in>winshutdownmonitor.cpp</in>
          <in>winshutdownmonitor.h</in>
        </df>
        <df name="rpc">
          <df name=".deps">
          </df>
          <in>blockchain.cpp</in>
          <in>blockchain.h</in>
          <in>client.cpp</in>
          <in>client.h</in>
          <in>external_signer.cpp</in>
          <in>fees.cpp</in>
          <in>mempool.cpp</in>
          <in>mempool.h</in>
          <in>mining.cpp</in>
          <in>mining.h</in>
          <in>net.cpp</in>
          <in>node.cpp</in>
          <in>output_script.cpp</in>
          <in>protocol.h</in>
          <in>rawtransaction.cpp</in>
          <in>rawtransaction_util.cpp</in>
          <in>rawtransaction_util.h</in>
          <in>register.h</in>
          <in>request.cpp</in>
          <in>request.h</in>
          <in>server.cpp</in>
          <in>server.h</in>
          <in>server_util.cpp</in>
          <in>server_util.h</in>
          <in>signmessage.cpp</in>
          <in>txoutproof.cpp</in>
          <in>util.cpp</in>
          <in>util.h</in>
        </df>
        <df name="script">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <in>bitcoinconsensus.cpp</in>
          <in>bitcoinconsensus.h</in>
          <in>descriptor.cpp</in>
          <in>descriptor.h</in>
          <in>interpreter.cpp</in>
          <in>interpreter.h</in>
          <in>keyorigin.h</in>
          <in>miniscript.cpp</in>
          <in>miniscript.h</in>
          <in>script.cpp</in>
          <in>script.h</in>
          <in>script_error.cpp</in>
          <in>script_error.h</in>
          <in>sigcache.cpp</in>
          <in>sigcache.h</in>
          <in>sign.cpp</in>
          <in>sign.h</in>
          <in>signingprovider.cpp</in>
          <in>signingprovider.h</in>
          <in>standard.cpp</in>
          <in>standard.h</in>
        </df>
        <df name="secp256k1">
          <df name=".libs">
          </df>
          <df name="autom4te.cache">
          </df>
          <df name="build-aux">
            <df name="m4">
            </df>
          </df>
          <df name="ci">
          </df>
          <df name="cmake">
          </df>
          <df name="contrib">
            <in>lax_der_parsing.c</in>
            <in>lax_der_parsing.h</in>
            <in>lax_der_privatekey_parsing.c</in>
            <in>lax_der_privatekey_parsing.h</in>
          </df>
          <df name="doc">
          </df>
          <df name="examples">
            <df name=".deps">
            </df>
            <in>ecdh.c</in>
            <in>ecdsa.c</in>
            <in>examples_util.h</in>
            <in>schnorr.c</in>
          </df>
          <df name="include">
            <in>secp256k1.h</in>
            <in>secp256k1_ecdh.h</in>
            <in>secp256k1_extrakeys.h</in>
            <in>secp256k1_preallocated.h</in>
            <in>secp256k1_recovery.h</in>
            <in>secp256k1_schnorrsig.h</in>
          </df>
          <df name="sage">
          </df>
          <df name="src">
            <df name=".deps">
            </df>
            <df name="asm">
              <in>field_10x26_arm.s</in>
            </df>
            <df name="modules">
              <df name="ecdh">
                <in>bench_impl.h</in>
                <in>main_impl.h</in>
                <in>tests_impl.h</in>
              </df>
              <df name="extrakeys">
                <in>main_impl.h</in>
                <in>tests_exhaustive_impl.h</in>
                <in>tests_impl.h</in>
              </df>
              <df name="recovery">
                <in>bench_impl.h</in>
                <in>main_impl.h</in>
                <in>tests_exhaustive_impl.h</in>
                <in>tests_impl.h</in>
              </df>
              <df name="schnorrsig">
                <in>bench_impl.h</in>
                <in>main_impl.h</in>
                <in>tests_exhaustive_impl.h</in>
                <in>tests_impl.h</in>
              </df>
            </df>
            <in>assumptions.h</in>
            <in>bench.c</in>
            <in>bench.h</in>
            <in>bench_ecmult.c</in>
            <in>bench_internal.c</in>
            <in>checkmem.h</in>
            <in>ctime_tests.c</in>
            <in>ecdsa.h</in>
            <in>ecdsa_impl.h</in>
            <in>eckey.h</in>
            <in>eckey_impl.h</in>
            <in>ecmult.h</in>
            <in>ecmult_compute_table.h</in>
            <in>ecmult_compute_table_impl.h</in>
            <in>ecmult_const.h</in>
            <in>ecmult_const_impl.h</in>
            <in>ecmult_gen.h</in>
            <in>ecmult_gen_compute_table.h</in>
            <in>ecmult_gen_compute_table_impl.h</in>
            <in>ecmult_gen_impl.h</in>
            <in>ecmult_impl.h</in>
            <in>field.h</in>
            <in>field_10x26.h</in>
            <in>field_10x26_impl.h</in>
            <in>field_5x52.h</in>
            <in>field_5x52_asm_impl.h</in>
            <in>field_5x52_impl.h</in>
            <in>field_5x52_int128_impl.h</in>
            <in>field_impl.h</in>
            <in>group.h</in>
            <in>group_impl.h</in>
            <in>hash.h</in>
            <in>hash_impl.h</in>
            <in>int128.h</in>
            <in>int128_impl.h</in>
            <in>int128_native.h</in>
            <in>int128_native_impl.h</in>
            <in>int128_struct.h</in>
            <in>int128_struct_impl.h</in>
            <in>modinv32.h</in>
            <in>modinv32_impl.h</in>
            <in>modinv64.h</in>
            <in>modinv64_impl.h</in>
            <in>precompute_ecmult.c</in>
            <in>precompute_ecmult_gen.c</in>
            <in>precomputed_ecmult.c</in>
            <in>precomputed_ecmult.h</in>
            <in>precomputed_ecmult_gen.c</in>
            <in>precomputed_ecmult_gen.h</in>
            <in>scalar.h</in>
            <in>scalar_4x64.h</in>
            <in>scalar_4x64_impl.h</in>
            <in>scalar_8x32.h</in>
            <in>scalar_8x32_impl.h</in>
            <in>scalar_impl.h</in>
            <in>scalar_low.h</in>
            <in>scalar_low_impl.h</in>
            <in>scratch.h</in>
            <in>scratch_impl.h</in>
            <in>secp256k1.c</in>
            <in>selftest.h</in>
            <in>testrand.h</in>
            <in>testrand_impl.h</in>
            <in>tests.c</in>
            <in>tests_exhaustive.c</in>
            <in>util.h</in>
          </df>
        </df>
        <df name="support">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <df name="allocators">
            <in>secure.h</in>
            <in>zeroafterfree.h</in>
          </df>
          <in>cleanse.cpp</in>
          <in>cleanse.h</in>
          <in>events.h</in>
          <in>lockedpool.cpp</in>
          <in>lockedpool.h</in>
        </df>
        <df name="test">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <df name="data">
            <in>asmap.raw.h</in>
            <in>base58_encode_decode.json.h</in>
            <in>bip341_wallet_vectors.json.h</in>
            <in>blockfilters.json.h</in>
            <in>key_io_invalid.json.h</in>
            <in>key_io_valid.json.h</in>
            <in>script_tests.json.h</in>
            <in>sighash.json.h</in>
            <in>tx_invalid.json.h</in>
            <in>tx_valid.json.h</in>
          </df>
          <df name="fuzz">
            <df name=".deps">
            </df>
            <df name=".libs">
            </df>
            <df name="util">
              <df name=".deps">
              </df>
              <in>mempool.cpp</in>
              <in>mempool.h</in>
              <in>net.cpp</in>
              <in>net.h</in>
            </df>
            <in>FuzzedDataProvider.h</in>
            <in>addition_overflow.cpp</in>
            <in>addrman.cpp</in>
            <in>asmap.cpp</in>
            <in>asmap_direct.cpp</in>
            <in>autofile.cpp</in>
            <in>banman.cpp</in>
            <in>base_encode_decode.cpp</in>
            <in>bech32.cpp</in>
            <in>bitdeque.cpp</in>
            <in>block.cpp</in>
            <in>block_header.cpp</in>
            <in>blockfilter.cpp</in>
            <in>bloom_filter.cpp</in>
            <in>buffered_file.cpp</in>
            <in>chain.cpp</in>
            <in>checkqueue.cpp</in>
            <in>coins_view.cpp</in>
            <in>coinscache_sim.cpp</in>
            <in>connman.cpp</in>
            <in>crypto.cpp</in>
            <in>crypto_aes256.cpp</in>
            <in>crypto_aes256cbc.cpp</in>
            <in>crypto_chacha20.cpp</in>
            <in>crypto_chacha20_poly1305_aead.cpp</in>
            <in>crypto_common.cpp</in>
            <in>crypto_diff_fuzz_chacha20.cpp</in>
            <in>crypto_hkdf_hmac_sha256_l32.cpp</in>
            <in>crypto_poly1305.cpp</in>
            <in>cuckoocache.cpp</in>
            <in>decode_tx.cpp</in>
            <in>descriptor_parse.cpp</in>
            <in>deserialize.cpp</in>
            <in>eval_script.cpp</in>
            <in>fee_rate.cpp</in>
            <in>fees.cpp</in>
            <in>flatfile.cpp</in>
            <in>float.cpp</in>
            <in>fuzz.cpp</in>
            <in>fuzz.h</in>
            <in>golomb_rice.cpp</in>
            <in>hex.cpp</in>
            <in>http_request.cpp</in>
            <in>i2p.cpp</in>
            <in>integer.cpp</in>
            <in>key.cpp</in>
            <in>key_io.cpp</in>
            <in>kitchen_sink.cpp</in>
            <in>load_external_block_file.cpp</in>
            <in>locale.cpp</in>
            <in>merkleblock.cpp</in>
            <in>message.cpp</in>
            <in>miniscript.cpp</in>
            <in>minisketch.cpp</in>
            <in>muhash.cpp</in>
            <in>multiplication_overflow.cpp</in>
            <in>net.cpp</in>
            <in>net_permissions.cpp</in>
            <in>netaddress.cpp</in>
            <in>netbase_dns_lookup.cpp</in>
            <in>node_eviction.cpp</in>
            <in>p2p_transport_serialization.cpp</in>
            <in>parse_hd_keypath.cpp</in>
            <in>parse_numbers.cpp</in>
            <in>parse_script.cpp</in>
            <in>parse_univalue.cpp</in>
            <in>partially_downloaded_block.cpp</in>
            <in>policy_estimator.cpp</in>
            <in>policy_estimator_io.cpp</in>
            <in>pow.cpp</in>
            <in>prevector.cpp</in>
            <in>primitives_transaction.cpp</in>
            <in>process_message.cpp</in>
            <in>process_messages.cpp</in>
            <in>protocol.cpp</in>
            <in>psbt.cpp</in>
            <in>random.cpp</in>
            <in>rbf.cpp</in>
            <in>rolling_bloom_filter.cpp</in>
            <in>rpc.cpp</in>
            <in>script.cpp</in>
            <in>script_assets_test_minimizer.cpp</in>
            <in>script_bitcoin_consensus.cpp</in>
            <in>script_descriptor_cache.cpp</in>
            <in>script_flags.cpp</in>
            <in>script_format.cpp</in>
            <in>script_interpreter.cpp</in>
            <in>script_ops.cpp</in>
            <in>script_sigcache.cpp</in>
            <in>script_sign.cpp</in>
            <in>scriptnum_ops.cpp</in>
            <in>secp256k1_ec_seckey_import_export_der.cpp</in>
            <in>secp256k1_ecdsa_signature_parse_der_lax.cpp</in>
            <in>signature_checker.cpp</in>
            <in>signet.cpp</in>
            <in>socks5.cpp</in>
            <in>span.cpp</in>
            <in>spanparsing.cpp</in>
            <in>string.cpp</in>
            <in>strprintf.cpp</in>
            <in>system.cpp</in>
            <in>timedata.cpp</in>
            <in>torcontrol.cpp</in>
            <in>transaction.cpp</in>
            <in>tx_in.cpp</in>
            <in>tx_out.cpp</in>
            <in>tx_pool.cpp</in>
            <in>txorphan.cpp</in>
            <in>txrequest.cpp</in>
            <in>util.cpp</in>
            <in>util.h</in>
            <in>utxo_snapshot.cpp</in>
            <in>validation_load_mempool.cpp</in>
            <in>versionbits.cpp</in>
          </df>
          <df name="util">
            <df name=".deps">
            </df>
            <in>blockfilter.cpp</in>
            <in>blockfilter.h</in>
            <in>chainstate.h</in>
            <in>coins.cpp</in>
            <in>coins.h</in>
            <in>json.cpp</in>
            <in>json.h</in>
            <in>logging.cpp</in>
            <in>logging.h</in>
            <in>mining.cpp</in>
            <in>mining.h</in>
            <in>net.cpp</in>
            <in>net.h</in>
            <in>random.h</in>
            <in>script.cpp</in>
            <in>script.h</in>
            <in>setup_common.cpp</in>
            <in>setup_common.h</in>
            <in>str.cpp</in>
            <in>str.h</in>
            <in>transaction_utils.cpp</in>
            <in>transaction_utils.h</in>
            <in>txmempool.cpp</in>
            <in>txmempool.h</in>
            <in>validation.cpp</in>
            <in>validation.h</in>
            <in>xoroshiro128plusplus.h</in>
          </df>
          <in>addrman_tests.cpp</in>
          <in>allocator_tests.cpp</in>
          <in>amount_tests.cpp</in>
          <in>argsman_tests.cpp</in>
          <in>arith_uint256_tests.cpp</in>
          <in>banman_tests.cpp</in>
          <in>base32_tests.cpp</in>
          <in>base58_tests.cpp</in>
          <in>base64_tests.cpp</in>
          <in>bech32_tests.cpp</in>
          <in>bip32_tests.cpp</in>
          <in>blockchain_tests.cpp</in>
          <in>blockencodings_tests.cpp</in>
          <in>blockfilter_index_tests.cpp</in>
          <in>blockfilter_tests.cpp</in>
          <in>blockmanager_tests.cpp</in>
          <in>bloom_tests.cpp</in>
          <in>bswap_tests.cpp</in>
          <in>checkqueue_tests.cpp</in>
          <in>coins_tests.cpp</in>
          <in>coinstatsindex_tests.cpp</in>
          <in>compilerbug_tests.cpp</in>
          <in>compress_tests.cpp</in>
          <in>crypto_tests.cpp</in>
          <in>cuckoocache_tests.cpp</in>
          <in>dbwrapper_tests.cpp</in>
          <in>denialofservice_tests.cpp</in>
          <in>descriptor_tests.cpp</in>
          <in>flatfile_tests.cpp</in>
          <in>fs_tests.cpp</in>
          <in>getarg_tests.cpp</in>
          <in>hash_tests.cpp</in>
          <in>headers_sync_chainwork_tests.cpp</in>
          <in>httpserver_tests.cpp</in>
          <in>i2p_tests.cpp</in>
          <in>interfaces_tests.cpp</in>
          <in>key_io_tests.cpp</in>
          <in>key_tests.cpp</in>
          <in>logging_tests.cpp</in>
          <in>main.cpp</in>
          <in>mempool_tests.cpp</in>
          <in>merkle_tests.cpp</in>
          <in>merkleblock_tests.cpp</in>
          <in>miner_tests.cpp</in>
          <in>miniscript_tests.cpp</in>
          <in>minisketch_tests.cpp</in>
          <in>multisig_tests.cpp</in>
          <in>net_peer_eviction_tests.cpp</in>
          <in>net_tests.cpp</in>
          <in>netbase_tests.cpp</in>
          <in>orphanage_tests.cpp</in>
          <in>pmt_tests.cpp</in>
          <in>policy_fee_tests.cpp</in>
          <in>policyestimator_tests.cpp</in>
          <in>pow_tests.cpp</in>
          <in>prevector_tests.cpp</in>
          <in>raii_event_tests.cpp</in>
          <in>random_tests.cpp</in>
          <in>rbf_tests.cpp</in>
          <in>rest_tests.cpp</in>
          <in>result_tests.cpp</in>
          <in>reverselock_tests.cpp</in>
          <in>rpc_tests.cpp</in>
          <in>sanity_tests.cpp</in>
          <in>scheduler_tests.cpp</in>
          <in>script_p2sh_tests.cpp</in>
          <in>script_parse_tests.cpp</in>
          <in>script_segwit_tests.cpp</in>
          <in>script_standard_tests.cpp</in>
          <in>script_tests.cpp</in>
          <in>scriptnum10.h</in>
          <in>scriptnum_tests.cpp</in>
          <in>serfloat_tests.cpp</in>
          <in>serialize_tests.cpp</in>
          <in>settings_tests.cpp</in>
          <in>sighash_tests.cpp</in>
          <in>sigopcount_tests.cpp</in>
          <in>skiplist_tests.cpp</in>
          <in>sock_tests.cpp</in>
          <in>streams_tests.cpp</in>
          <in>sync_tests.cpp</in>
          <in>system_tests.cpp</in>
          <in>timedata_tests.cpp</in>
          <in>torcontrol_tests.cpp</in>
          <in>transaction_tests.cpp</in>
          <in>translation_tests.cpp</in>
          <in>txindex_tests.cpp</in>
          <in>txpackage_tests.cpp</in>
          <in>txreconciliation_tests.cpp</in>
          <in>txrequest_tests.cpp</in>
          <in>txvalidation_tests.cpp</in>
          <in>txvalidationcache_tests.cpp</in>
          <in>uint256_tests.cpp</in>
          <in>util_tests.cpp</in>
          <in>util_threadnames_tests.cpp</in>
          <in>validation_block_tests.cpp</in>
          <in>validation_chainstate_tests.cpp</in>
          <in>validation_chainstatemanager_tests.cpp</in>
          <in>validation_flush_tests.cpp</in>
          <in>validation_tests.cpp</in>
          <in>validationinterface_tests.cpp</in>
          <in>versionbits_tests.cpp</in>
          <in>xoroshiro128plusplus_tests.cpp</in>
        </df>
        <df name="univalue">
          <df name="include">
            <in>univalue.h</in>
            <in>univalue_escapes.h</in>
            <in>univalue_utffilter.h</in>
          </df>
          <df name="lib">
            <df name=".deps">
            </df>
            <df name=".libs">
            </df>
            <in>univalue.cpp</in>
            <in>univalue_get.cpp</in>
            <in>univalue_read.cpp</in>
            <in>univalue_write.cpp</in>
          </df>
          <df name="test">
            <df name=".deps">
            </df>
            <df name=".libs">
            </df>
            <in>object.cpp</in>
            <in>test_json.cpp</in>
            <in>unitester.cpp</in>
          </df>
        </df>
        <df name="util">
          <df name=".deps">
          </df>
          <df name=".libs">
          </df>
          <in>asmap.cpp</in>
          <in>asmap.h</in>
          <in>bip32.cpp</in>
          <in>bip32.h</in>
          <in>bitdeque.h</in>
          <in>bytevectorhash.cpp</in>
          <in>bytevectorhash.h</in>
          <in>check.cpp</in>
          <in>check.h</in>
          <in>epochguard.h</in>
          <in>error.cpp</in>
          <in>error.h</in>
          <in>exception.cpp</in>
          <in>exception.h</in>
          <in>fastrange.h</in>
          <in>fees.cpp</in>
          <in>fees.h</in>
          <in>getuniquepath.cpp</in>
          <in>getuniquepath.h</in>
          <in>golombrice.h</in>
          <in>hash_type.h</in>
          <in>hasher.cpp</in>
          <in>hasher.h</in>
          <in>macros.h</in>
          <in>message.cpp</in>
          <in>message.h</in>
          <in>moneystr.cpp</in>
          <in>moneystr.h</in>
          <in>overflow.h</in>
          <in>overloaded.h</in>
          <in>rbf.cpp</in>
          <in>rbf.h</in>
          <in>readwritefile.cpp</in>
          <in>readwritefile.h</in>
          <in>result.h</in>
          <in>serfloat.cpp</in>
          <in>serfloat.h</in>
          <in>settings.cpp</in>
          <in>settings.h</in>
          <in>sock.cpp</in>
          <in>sock.h</in>
          <in>spanparsing.cpp</in>
          <in>spanparsing.h</in>
          <in>strencodings.cpp</in>
          <in>strencodings.h</in>
          <in>string.cpp</in>
          <in>string.h</in>
          <in>syscall_sandbox.cpp</in>
          <in>syscall_sandbox.h</in>
          <in>syserror.cpp</in>
          <in>syserror.h</in>
          <in>system.cpp</in>
          <in>system.h</in>
          <in>thread.cpp</in>
          <in>thread.h</in>
          <in>threadinterrupt.cpp</in>
          <in>threadinterrupt.h</in>
          <in>threadnames.cpp</in>
          <in>threadnames.h</in>
          <in>time.cpp</in>
          <in>time.h</in>
          <in>tokenpipe.cpp</in>
          <in>tokenpipe.h</in>
          <in>trace.h</in>
          <in>translation.h</in>
          <in>types.h</in>
          <in>ui_change_type.h</in>
          <in>vector.h</in>
        </df>
        <df name="wallet">
          <df name=".deps">
          </df>
          <df name="rpc">
            <df name=".deps">
            </df>
            <in>addresses.cpp</in>
            <in>backup.cpp</in>
            <in>coins.cpp</in>
            <in>encrypt.cpp</in>
            <in>signmessage.cpp</in>
            <in>spend.cpp</in>
            <in>transactions.cpp</in>
            <in>util.cpp</in>
            <in>util.h</in>
            <in>wallet.cpp</in>
            <in>wallet.h</in>
          </df>
          <df name="test">
            <df name=".deps">
            </df>
            <df name="fuzz">
              <df name=".deps">
              </df>
              <in>coinselection.cpp</in>
              <in>notifications.cpp</in>
              <in>parse_iso8601.cpp</in>
            </df>
            <in>coinselector_tests.cpp</in>
            <in>db_tests.cpp</in>
            <in>feebumper_tests.cpp</in>
            <in>group_outputs_tests.cpp</in>
            <in>init_test_fixture.cpp</in>
            <in>init_test_fixture.h</in>
            <in>init_tests.cpp</in>
            <in>ismine_tests.cpp</in>
            <in>psbt_wallet_tests.cpp</in>
            <in>rpc_util_tests.cpp</in>
            <in>scriptpubkeyman_tests.cpp</in>
            <in>spend_tests.cpp</in>
            <in>util.cpp</in>
            <in>util.h</in>
            <in>wallet_crypto_tests.cpp</in>
            <in>wallet_test_fixture.cpp</in>
            <in>wallet_test_fixture.h</in>
            <in>wallet_tests.cpp</in>
            <in>wallet_transaction_tests.cpp</in>
            <in>walletdb_tests.cpp</in>
            <in>walletload_tests.cpp</in>
          </df>
          <in>bdb.cpp</in>
          <in>bdb.h</in>
          <in>coincontrol.cpp</in>
          <in>coincontrol.h</in>
          <in>coinselection.cpp</in>
          <in>coinselection.h</in>
          <in>context.cpp</in>
          <in>context.h</in>
          <in>crypter.cpp</in>
          <in>crypter.h</in>
          <in>db.cpp</in>
          <in>db.h</in>
          <in>dump.cpp</in>
          <in>dump.h</in>
          <in>external_signer_scriptpubkeyman.cpp</in>
          <in>external_signer_scriptpubkeyman.h</in>
          <in>feebumper.cpp</in>
          <in>feebumper.h</in>
          <in>fees.cpp</in>
          <in>fees.h</in>
          <in>init.cpp</in>
          <in>interfaces.cpp</in>
          <in>ismine.h</in>
          <in>load.cpp</in>
          <in>load.h</in>
          <in>receive.cpp</in>
          <in>receive.h</in>
          <in>salvage.cpp</in>
          <in>salvage.h</in>
          <in>scriptpubkeyman.cpp</in>
          <in>scriptpubkeyman.h</in>
          <in>spend.cpp</in>
          <in>spend.h</in>
          <in>sqlite.cpp</in>
          <in>sqlite.h</in>
          <in>transaction.cpp</in>
          <in>transaction.h</in>
          <in>wallet.cpp</in>
          <in>wallet.h</in>
          <in>walletdb.cpp</in>
          <in>walletdb.h</in>
          <in>wallettool.cpp</in>
          <in>wallettool.h</in>
          <in>walletutil.cpp</in>
          <in>walletutil.h</in>
        </df>
        <df name="zmq">
          <df name=".deps">
          </df>
          <in>zmqabstractnotifier.cpp</in>
          <in>zmqabstractnotifier.h</in>
          <in>zmqnotificationinterface.cpp</in>
          <in>zmqnotificationinterface.h</in>
          <in>zmqpublishnotifier.cpp</in>
          <in>zmqpublishnotifier.h</in>
          <in>zmqrpc.cpp</in>
          <in>zmqrpc.h</in>
          <in>zmqutil.cpp</in>
          <in>zmqutil.h</in>
        </df>
        <in>addrdb.cpp</in>
        <in>addrdb.h</in>
        <in>addrman.cpp</in>
        <in>addrman.h</in>
        <in>addrman_impl.h</in>
        <in>arith_uint256.cpp</in>
        <in>arith_uint256.h</in>
        <in>attributes.h</in>
        <in>banman.cpp</in>
        <in>banman.h</in>
        <in>base58.cpp</in>
        <in>base58.h</in>
        <in>bech32.cpp</in>
        <in>bech32.h</in>
        <in>bitcoin-chainstate.cpp</in>
        <in>bitcoin-cli.cpp</in>
        <in>bitcoin-tx.cpp</in>
        <in>bitcoin-util.cpp</in>
        <in>bitcoin-wallet.cpp</in>
        <in>bitcoind.cpp</in>
        <in>blockencodings.cpp</in>
        <in>blockencodings.h</in>
        <in>blockfilter.cpp</in>
        <in>blockfilter.h</in>
        <in>chain.cpp</in>
        <in>chain.h</in>
        <in>chainparams.cpp</in>
        <in>chainparams.h</in>
        <in>chainparamsbase.cpp</in>
        <in>chainparamsbase.h</in>
        <in>chainparamsseeds.h</in>
        <in>checkqueue.h</in>
        <in>clientversion.cpp</in>
        <in>clientversion.h</in>
        <in>coins.cpp</in>
        <in>coins.h</in>
        <in>compressor.cpp</in>
        <in>compressor.h</in>
        <in>core_io.h</in>
        <in>core_memusage.h</in>
        <in>core_read.cpp</in>
        <in>core_write.cpp</in>
        <in>cuckoocache.h</in>
        <in>dbwrapper.cpp</in>
        <in>dbwrapper.h</in>
        <in>deploymentinfo.cpp</in>
        <in>deploymentinfo.h</in>
        <in>deploymentstatus.cpp</in>
        <in>deploymentstatus.h</in>
        <in>dummywallet.cpp</in>
        <in>external_signer.cpp</in>
        <in>external_signer.h</in>
        <in>flatfile.cpp</in>
        <in>flatfile.h</in>
        <in>fs.cpp</in>
        <in>fs.h</in>
        <in>hash.cpp</in>
        <in>hash.h</in>
        <in>headerssync.cpp</in>
        <in>headerssync.h</in>
        <in>httprpc.cpp</in>
        <in>httprpc.h</in>
        <in>httpserver.cpp</in>
        <in>httpserver.h</in>
        <in>i2p.cpp</in>
        <in>i2p.h</in>
        <in>indirectmap.h</in>
        <in>init.cpp</in>
        <in>init.h</in>
        <in>key.cpp</in>
        <in>key.h</in>
        <in>key_io.cpp</in>
        <in>key_io.h</in>
        <in>logging.cpp</in>
        <in>logging.h</in>
        <in>mapport.cpp</in>
        <in>mapport.h</in>
        <in>memusage.h</in>
        <in>merkleblock.cpp</in>
        <in>merkleblock.h</in>
        <in>net.cpp</in>
        <in>net.h</in>
        <in>net_permissions.cpp</in>
        <in>net_permissions.h</in>
        <in>net_processing.cpp</in>
        <in>net_processing.h</in>
        <in>net_types.cpp</in>
        <in>net_types.h</in>
        <in>netaddress.cpp</in>
        <in>netaddress.h</in>
        <in>netbase.cpp</in>
        <in>netbase.h</in>
        <in>netgroup.cpp</in>
        <in>netgroup.h</in>
        <in>netmessagemaker.h</in>
        <in>noui.cpp</in>
        <in>noui.h</in>
        <in>outputtype.cpp</in>
        <in>outputtype.h</in>
        <in>pow.cpp</in>
        <in>pow.h</in>
        <in>prevector.h</in>
        <in>protocol.cpp</in>
        <in>protocol.h</in>
        <in>psbt.cpp</in>
        <in>psbt.h</in>
        <in>pubkey.cpp</in>
        <in>pubkey.h</in>
        <in>random.cpp</in>
        <in>random.h</in>
        <in>randomenv.cpp</in>
        <in>randomenv.h</in>
        <in>rest.cpp</in>
        <in>rest.h</in>
        <in>reverse_iterator.h</in>
        <in>scheduler.cpp</in>
        <in>scheduler.h</in>
        <in>serialize.h</in>
        <in>shutdown.cpp</in>
        <in>shutdown.h</in>
        <in>signet.cpp</in>
        <in>signet.h</in>
        <in>span.h</in>
        <in>streams.h</in>
        <in>sync.cpp</in>
        <in>sync.h</in>
        <in>threadsafety.h</in>
        <in>timedata.cpp</in>
        <in>timedata.h</in>
        <in>tinyformat.h</in>
        <in>torcontrol.cpp</in>
        <in>torcontrol.h</in>
        <in>txdb.cpp</in>
        <in>txdb.h</in>
        <in>txmempool.cpp</in>
        <in>txmempool.h</in>
        <in>txorphanage.cpp</in>
        <in>txorphanage.h</in>
        <in>txrequest.cpp</in>
        <in>txrequest.h</in>
        <in>uint256.cpp</in>
        <in>uint256.h</in>
        <in>undo.h</in>
        <in>validation.cpp</in>
        <in>validation.h</in>
        <in>validationinterface.cpp</in>
        <in>validationinterface.h</in>
        <in>version.h</in>
        <in>versionbits.cpp</in>
        <in>versionbits.h</in>
        <in>walletinitinterface.h</in>
        <in>warnings.cpp</in>
        <in>warnings.h</in>
      </df>
      <df name="test">
        <df name="functional">
          <df name="data">
          </df>
          <df name="mocks">
          </df>
          <df name="test_framework">
          </df>
        </df>
        <df name="fuzz">
        </df>
        <df name="lint">
        </df>
        <df name="sanitizer_suppressions">
        </df>
        <df name="util">
          <df name="data">
          </df>
        </df>
      </df>
    </df>
    <itemPath>labs.marcosptf</itemPath>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
